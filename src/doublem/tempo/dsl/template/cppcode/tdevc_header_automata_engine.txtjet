<%@jet package="br.ufpe.cin.greco.devc.languageStructure.tdevctemplate" imports="br.ufpe.cin.greco.devc.languageStructure.* java.util.*" class="TDEVCHeaderAutomataEngine" %>
<%TDCCheckerGenerator tdgen = (TDCCheckerGenerator)argument;%>
//*************************************************************************\\
//***********               tdc_automata_engine.h      		***********\\
//*************************************************************************\\
//*************************************************************************\\
//*********** 		        UFPE/Cin - Greco		***********\\
//*********** 		 http://www.cin.ufpe.br/~greco 		***********\\
//***********							***********\\
//***********							***********\\
//*********** 		    By Rafael Melo Macieira		***********\\
//***********							***********\\
//***********		    E-mail: rmm2@cin.ufpe.br		***********\\
//*************************************************************************\\
//*************************************************************************\\
//**		 Automata Reference for the temporal check		 **\\
//**	   	 Automatas Configuration Class                           **\\
//*************************************************************************\\

#ifndef TDC_AUTOMATA_ENGINE_H
#define TDC_AUTOMATA_ENGINE_H

#include <fstream>
#include <string>
#include "tdc_automata.h"
<%for (String service : tdgen.getServices().keySet()) {%>
#include "tdc_automata_<%=service%>.h"
<%}%>

class TDC_Automata_Engine {
private:
    VarList *mainVarList;
    AutomataList *mainAutomataList;
    TDC_Automata *currentAutomata;
    VarList *currentVarList;
    //VarList *tmpCurrentVarList;
    bool runStepNow;
    bool inAutomata;
    int isVarToCheck(unsigned int platformAddr);
    std::string internalRunStep(bool access_type, unsigned int data, int* rError);
    void cleanUpdate();
    bool isLastRead;
    unsigned int tmpReadedPlatformAddr;
    unsigned int lastReadedPlatformAddr;
    unsigned int lastReadedData;
    void printReport();
    void printDataReport(std::ofstream *reportFile);
    void printFlowReport(std::ofstream *reportFile);
    //std::ofstream reportFile;

public:
    TDC_Automata_Engine();
    void checkThisVar(unsigned int platformAddr);
    void runStep(bool access_type, unsigned int data);
};

#endif